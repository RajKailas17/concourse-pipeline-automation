resources:

  - name: code
    type: git
    icon: github
    check_every: 168h
    source:
      uri: https://github.com/RajKailas17/concourse-pipeline-automation.git
      branch: main

jobs:
  - name: set-self
    public: true
    plan:
      - get: code
        trigger: true
      - set_pipeline: self
        file: code/pipelines/instanced/set-release-pipelines.yml
  - name: set-pipelines
    plan:
      - get: code
        trigger: true
        passed: [ set-self ]
      - task: get-release-notes
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: alpine
          inputs:
            - name: code
          outputs:
            - name: release_notes
          run:
            path: /bin/sh
            user: root
            args:
              - -c
              - |
                apk add --quiet yq
                ls -ltr
                cd code/release-list
                echo "Listing files "
                ls -ltr
                release=((release.id))
                echo "release is ${release}"
                yq release_${release}.csv -p=csv -o=yml >> release_${release}.yml
                ls -ltr
                cp ./release_${release}.yml ../../release_notes
      - load_var: release_info
        file: release_notes/release_((release.id)).yml

      - across: # For each target value
          - var: target
            values: ((.:release_info))
            max_in_flight: 5
        do:
        - task: print-something
          config:
            platform: linux
            inputs:
            - name: code
            image_resource:
              type: registry-image
              source:
                repository: alpine
              run:
                path: /bin/sh
                user: root
                args:
                  - -c
                  - |
                    module=((.:target.serviceName))
                    branch=((.:target.serviceName.branch))
                    echo "Module is - " ${module}
                    echo "branch is -" ${branch}
